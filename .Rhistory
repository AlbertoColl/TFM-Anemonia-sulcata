theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:3]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
### Graficas y resultados PCA ----
write.csv2(as.data.frame(PCA[["CA"]][["v"]]), "./resultados/PCA_factor_loadings.csv") # Factor loadings, para excel
as.data.frame(PCA[["CA"]][["v"]]
)
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, proteina.tent, proteina.pie)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, clorofila.total, TEAC.tent, TEAC.pie)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.tent, TEAC.pie)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.tent, TEAC.pie)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:2]) # queremos un 80%
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
PCA[["CA"]][["v"]]
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
### Graficas y resultados PCA ----
#Extraer eigenvalues y hacer Scree plot bonico con ggplot
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
rename("eigenvalue"="PCA$CA$eig") %>%
mutate(var_per = eigenvalue/sum(eigenvalue)) %>%
rownames_to_column(var = "PC")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1) +
geom_point() +
theme_tfm()
View(eigenvalues)
# Factor loadings, exportar en csv para hacer tabla
write.csv2(as.data.frame(PCA[["CA"]][["v"]]), "./resultados/PCA_factor_loadings.csv")
ggplot(datos) +
geom_histogram(aes(x = MDA.pie))
ggplot(datos) +
geom_histogram(aes(x = MDA.pie)) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = sqrt(20)) +
theme_tfm()
sqrt(20)
geom_histogram(aes(x = MDA.pie), binwidth = 3 +
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = 3) +
theme_tfm()
ggplot(datos) +
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = 3) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = 4) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = 2) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), binwidth = 3.5) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), binwidth = 3.5) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 10) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 15) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), bins = 15) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), bins = 17) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), bins = 20) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.pie), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_boxplot(aes(Y = MDA.tent))
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent))
# Outliers potenciales:
datos$MDA.tent[3]
# Outliers potenciales:
datos$MDA.tent[17]
# Outliers potenciales:
datos$MDA.tent[17] <- NA
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent))
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento))
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento)) +
theme_tfm
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento)) +
theme_tfm()
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento)) +
theme_tfm() +
ylab("MDA en tentáculo (uM)")
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento)) +
theme_tfm() +
ylab("MDA en tentáculo (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento, fill = tratamiento)) +
theme_tfm() +
ylab("MDA en tentáculo (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
theme_tfm() +
ylab("MDA en tentáculo (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
View(datos_pca)
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_violin(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_violin(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_violin(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento)) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento)) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento), position = "jitter") +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.8) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento), position = "jitter") +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento), position = "jitter") +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento), position = "jitter") +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_point(aes(y = MDA.pie, x = tratamiento, color = tratamiento), position = "jitter") +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_jitter(aes(y = MDA.pie, x = tratamiento, color = tratamiento), width = 0.5) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_jitter(aes(y = MDA.pie, x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en pie (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = MDA.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
geom_jitter(aes(y = MDA.tent, x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = CAT.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = MDA.tent, x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
datos$CAT.tent[20] <- NA # Bastante elevado en general
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_boxplot(aes(y = CAT.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = CAT.PIE, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = CAT.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
datos$CAT.pie[8] <- NA # Desorbitado para el grupo y general
datos$CAT.pie[16] <- NA # Desorbitado para el grupo y general
ggplot(datos) +
geom_histogram(aes(x = MDA.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_boxplot(aes(y = CAT.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = proteina.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = proteina.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = TEAC.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = TEAC.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("MDA en tent (uM)") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = TEAC.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("TEAC pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = TEAC.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("TEAC tentaculo") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = GST.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("GST tentaculo") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
datos$GST.tent[9] <- NA # outlier clarisimo
ggplot(datos) +
geom_boxplot(aes(y = GST.tent, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("GST tentaculo") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = GST.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("GST pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
datos$GST.pie[9] <- NA # outlier clarisimo
ggplot(datos) +
geom_boxplot(aes(y = GST.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("GST pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
# Outliers potenciales:
datos$MDA.tent[17] <- NA # Es claramente un error de medida
datos$MDA.tent[5] # Bastante elevado para su grupo
datos$CAT.tent[20] <- NA # Bastante elevado en general
datos$CAT.pie[8] <- NA # Desorbitado para el grupo y general
datos$CAT.pie[16] <- NA # Desorbitado para el grupo y general
datos$proteina.tent[20] # Valor de proteina muy bajo, igual cambia otras variables
datos$GST.tent[9] <- NA # outlier clarisimo
datos$GST.tent[10] # se desvia bastante del resto de medidas
datos$GST.pie[8] <- NA # outlier clarisimo
ggplot(datos) +
geom_boxplot(aes(y = GST.pie, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("GST pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
ggplot(datos) +
geom_boxplot(aes(y = clorofila.total, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("clorofila") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
datos$clorofila.total[8] <- NA # Bastante desorbitado
ggplot(datos) +
geom_boxplot(aes(y = clorofila.total, x = tratamiento, fill = tratamiento), alpha = 0.6) +
#geom_jitter(aes(y = , x = tratamiento, color = tratamiento), width = 0.2) +
theme_tfm() +
ylab("clorofila") +
scale_fill_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B", "#FBBC4C", "#E56A1C"))
View(datos)
# Crear lista de formulas con sapply()
formulas <- sapply(colnames(datos[c(5:23)]), function(x){as.formula(paste0(x, " ~ tratamiento"))})
View(formulas)
modelos <- sapply(formulas, function(x){aov(x, datos)})
View(datos)
summary(datos)
modelos <- sapply(formulas, function(x){aov(x, datos)})
modelos <- sapply(colnames(datos[c(5:23)]), function(x){
aov(formula = as.formula(paste0(x," ~ tratamiento")), datos)})
datos$tratamiento
sapply(lapply(datos, unique), length)
datos <- dats %>% select(n, muestra, tratamiento, peso.total, clorofila.total, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.pie, TEAC.tent, proteina.pie, proteina.tent)
datos <- datos %>% select(n, muestra, tratamiento, peso.total, clorofila.total, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.pie, TEAC.tent, proteina.pie, proteina.tent)
View(datos)
# Falta: pruebas de normalidad de residuos y homocedasticidad
sapply(modelos, function(x){
shapiro.test(residuals(x))
})
modelos <- sapply(colnames(datos[c(5:23)]), function(x){
aov(formula = as.formula(paste0(x," ~ tratamiento")), datos)})
datos <- datos %>% select(n, muestra, tratamiento, peso.total, clorofila.total, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.pie, TEAC.tent, proteina.pie, proteina.tent)#QUITAR ESTO CUANDO TENGAS TODO
modelos <- sapply(colnames(datos[c(5:23)]), function(x){
aov(formula = as.formula(paste0(x," ~ tratamiento")), datos)})
modelos <- sapply(colnames(datos[c(5:15)]), function(x){
aov(formula = as.formula(paste0(x," ~ tratamiento")), datos)})
# Falta: pruebas de normalidad de residuos y homocedasticidad
sapply(modelos, function(x){
shapiro.test(residuals(x))
})
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
# Falta: pruebas de normalidad de residuos y homocedasticidad
sapply(modelos, function(x){
shapiro.test(residuals(x))
}) # Todo bien por ahora
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
plot(modelos[1])
plot(modelos[[1]], which = 3)
plot(modelos[[2]], which = 3)
plot(modelos[[3]], which = 3)
plot(modelos[[4]], which = 3)
plot(modelos[[5]], which = 3)
plot(modelos[[6]], which = 3)
plot(modelos[[7]], which = 3)
plot(modelos[[8]], which = 3)
plot(modelos[[9]], which = 3)
plot(modelos[[10]], which = 3)
plot(modelos[[11]], which = 3)
plot(modelos[[12]], which = 3)
library(car)
leveneTest(modelos[[1]])
leveneTest(modelos[[2]])
leveneTest(modelos[[3]])
leveneTest(modelos[[4]])
leveneTest(modelos[[5]])
leveneTest(modelos[[6]])
leveneTest(modelos[[7]])
leveneTest(modelos[[8]])
leveneTest(modelos[[9]])
leveneTest(modelos[[10]])
leveneTest(modelos[[11]])
leveneTest(x)
sapply(modelos, function(x){
leveneTest(x)
}) # Esto no se por que no funciona, pero puedes hacer leveneTest(manual)
print(leveneTest(x))
sapply(modelos, function(x){
print(leveneTest(x))
}) # Esto no se por que no funciona, pero puedes hacer leveneTest(manual)
sapply(modelos, function(x){
summary(leveneTest(x))
}) # Esto no se por que no funciona, pero puedes hacer leveneTest(manual)
print(leveneTest(x))
sapply(modelos, function(x){
print(leveneTest(x))
}) # Esto no se por que no funciona, pero puedes hacer leveneTest(manual)
library(multcompView)
