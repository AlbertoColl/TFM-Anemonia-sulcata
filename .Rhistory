datos$ac1 <- cutree(ac1, k = 3)
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3 begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 6)
datos$ac1 <- cutree(ac1, k = 6) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
head(penguins)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
6
6
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
datos$ac2 <- ac2$cluster
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
### SETUP ----
library(tidyverse)
library(rstatix)
library(ggpubr)
library(multcompView)
### SETUP ----
library(tidyverse)
library(rstatix)
library(ggpubr)
library(multcompView)
#setwd("D:/collf/Documents/GitHub/TFM-Anemonia-sulcata") # portatil
setwd("C:/Users/Usuario/Documents/GitHub/TFM-Anemonia-sulcata")  # lab
datos_c <- read.csv2("./datos/datos_peso_REVISION.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
summary(datos_c)
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
datos_c$tratamiento <- factor(datos_c$tratamiento, levels = c("Control", "Oscuro", "Salobre", "IMTA"), labels = c("Control", "LS", "BW", "IMTA"))
### Exploración de datos ----
# Observamos la distribución de los datos en general y por grupo
hist(datos_c$incremento.n)
datos_c %>%
group_by(tratamiento) %>%
shapiro_test(incremento.n)
# Ambas variable respuesta (incrmento en n y ganancia de peso total son normales en los tratamientos salvo la ganancia de peso para el IMTA.
## Comprobacion de outliers
outliers <- datos_c %>%
group_by(tratamiento) %>%
identify_outliers(ganancia.de.peso.total..g.)
# Hay 3 potenciales outliers, uno de ellos extremo en el grupo contol. Los otros dos en el grupo Control e IMTA. El dato de IMTA es el que afecta a la normalidad.
### Graficas iniciales----
# Estadisticos de resumen para las graficas
tabla_sum_1 <- datos_c %>%
group_by(tratamiento)  %>%
get_summary_stats(ganancia.de.peso.total..g., type = "mean_se")
tabla_sum_2 <- datos_c %>%
group_by(tratamiento)  %>%
get_summary_stats(incremento.n, type = "mean_se")
# Boxplot rapido
(ggboxplot(datos_c, x = "tratamiento", y = "incremento.n",
add = "point", color = "tratamiento"))
(ggboxplot(datos_c, x = "tratamiento", y = "ganancia.de.peso.total..g.",
add = "point", color = "tratamiento"))
# De barras:
# Para ganancia de peso
ggplot(tabla_sum_1) +
geom_col(aes(x = tratamiento, y = mean, fill = tratamiento), alpha = 1, width = 0.8) +
geom_errorbar(aes(x = tratamiento, y = mean, ymax = mean + se, ymin = mean - se), width = 0.4, color = "gray45") +
geom_hline(yintercept=0, linetype="dashed")
# Para incremento de n
ggplot(tabla_sum_2) +
geom_col(aes(x = tratamiento, y = mean, fill = tratamiento), alpha = 1, width = 0.8) +
geom_errorbar(aes(x = tratamiento, y = mean, ymax = mean + se, ymin = mean - se), width = 0.4, color = "gray45") +
geom_hline(yintercept=0, linetype="dashed")
### Anova de una via ----
peso.anova <- anova_test(data = datos_c, formula = ganancia.de.peso.total..g. ~ tratamiento)
get_anova_table(peso.anova)
n.anova <- anova_test(data = datos_c, formula = incremento.n ~ tratamiento)
get_anova_table(n.anova)
# Como el peso sale cercano a 0.05 hay ambiguedad en torno a si existen diferencias significativas entre tratamientos. Como el análisis de outliers reveló puntos potencialmente influyentes, vamos a comprobar si afectan al resultado del análisis.
# No parece que los outliers resuelvan la ambiguedad en el peso. Mejor no quitarlos, salvo igual el 3 solo porque afecta a la normalidad
# Outlier 3: no extremo pero afecta normalidad, baja p valor pero sigue muy amiguo
datos_c$ganancia.de.peso.total..g.[6] <- NA
datos_c$ganancia.de.peso.total..g.[3] <- NA
peso.anova <- anova_test(data = datos_c, formula = ganancia.de.peso.total..g. ~ tratamiento, type = 3)
get_anova_table(peso.anova)
### Post-hoc test----
# Solo para numero de individuos
anova1 <- aov(data = datos_c, incremento.n ~ tratamiento)
cld = multcompLetters4(anova1, TukeyHSD(anova1), reversed = T)
letras <- rownames_to_column(as.data.frame(cld$tratamiento$Letters))
colnames(letras) <- c("tratamiento", "tukey")
tabla_sum_2 <- merge(tabla_sum_2, letras)
# Graficas final----
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", size = 1) +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 3.5, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 3.5, fontface = "bold", color = "grey5") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 3.5, fontface = "bold", color = "grey5") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
saveRDS("./resultados/graficas_upd/reproduccion.RDS")
# DIFERENCIA NUMERO INDIVIDUOS
(p <- ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 3.5, fontface = "bold", color = "grey5") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
)
saveRDS(p, "./resultados/graficas_upd/reproduccion.RDS")
ggsave("./resultados/graficas_upd/reproduccion.png", width = 90, height = 112.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas_upd2/reproduccion.png", width = 90, height = 112.5, units = "mm", dpi = 1000)
ggsave(paste0("./resultados/graficas_upd2/reproduccion.svg"), width = 180, height = 112.5, units = "mm", dpi = 1000)
saveRDS(p, "./resultados/graficas_upd/crecimiento.RDS")
ggsave("./resultados/graficas_upd2/crecimiento.png", width = 90, height = 112.5, units = "mm", dpi = 1000)
ggsave(paste0("./resultados/graficas_upd2/crecimiento.svg"), width = 180, height = 112.5, units = "mm", dpi = 1000)
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.7, color = "gray55") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
saveRDS(p, "./resultados/graficas_upd/crecimiento.RDS")
ggsave("./resultados/graficas_upd2/crecimiento.png", width = 90, height = 112.5, units = "mm", dpi = 1000)
ggsave(paste0("./resultados/graficas_upd2/crecimiento.svg"), width = 180, height = 112.5, units = "mm", dpi = 1000)
# Boxplot rapido
(ggboxplot(datos_c, x = "tratamiento", y = "incremento.n",
add = "point", color = "tratamiento"))
function (data, x, y, combine = FALSE, merge = FALSE, color = "black",
fill = "white", palette = NULL, title = NULL, xlab = NULL,
ylab = NULL, bxp.errorbar = FALSE, bxp.errorbar.width = 0.4,
facet.by = NULL, panel.labs = NULL, short.panel.labs = TRUE,
linetype = "solid", size = NULL, width = 0.7, notch = FALSE,
outlier.shape = 19, select = NULL, remove = NULL, order = NULL,
add = "none", add.params = list(), error.plot = "pointrange",
label = NULL, font.label = list(size = 11, color = "black"),
label.select = NULL, repel = FALSE, label.rectangle = FALSE,
ggtheme = theme_pubr(), ...)
# Boxplot rapido
(ggboxplot(datos_c, x = "tratamiento", y = "incremento.n",
add = "point", color = "tratamiento"))
(ggboxplot(datos_c, x = "tratamiento", y = "ganancia.de.peso.total..g.",
add = "point", color = "tratamiento"))
