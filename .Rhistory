facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "gray99", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank()) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
### Graficas para Aitana
# 24/10/2023 - 27/10/2023
### Setup y cargar datos ----
# IMPORTANTE: SI NO TIENES INSTALADOS ESTOS PAQUETES, INSTALALOS PRIMERO ANTES DE CARGARLOS
#install.packages("tidyverse")
library(tidyverse)
setwd("D:/collf/Documents") # Aqui tienes que poner la direccion de carpeta donde tienes los datos o quiras guardar el archivo y las graficas
datos <- read.csv2("graficas aitana.csv", encoding = "latin1", dec = ".")
summary(datos) # Aqui pones el nombre del archivo con los datos, o pones "clipboard" para pegarlos como me enseñaste. Asegurate que el separador decimal (dec) esta bien
# Cambiar el tipo de variable y ordenar los niveles
datos$estacion <- as.factor(datos$estacion)
datos$tramo <- as.factor(datos$tramo)
datos$estacion <- ordered(datos$estacion, levels = c("OTOÑO", "INVIERNO", "PRIMAVERA", "VERANO"))
### Cambiar a formato largo ----
# Necesitamos una nueva variable (tipo), que pueda tomar los valores promedio, exotica o amenazada. La función gather() del paquete tidyr hace esto
# Lo hago separando los datos de especies e individuos porque no me apetece pensar
datos_especies <- gather(datos, key = tipo, value = species, sp_promedio:sp_amenzadas) %>% select(estacion, tramo, tipo, species)
datos_especies$tipo <- as.factor(datos_especies$tipo)
datos_especies$tipo <- factor(datos_especies$tipo, levels = c("sp_amenzadas", "sp_promedio", "sp_exoticas"))
datos_individuos <- gather(datos, key = tipo, value = individuos, ind_promedio:ind_amenazadas) %>% select(estacion, tramo, tipo, individuos)
datos_individuos$tipo <- as.factor(datos_individuos$tipo)
datos_individuos$tipo <- factor(datos_individuos$tipo, levels = c("ind_amenazadas", "ind_promedio", "ind_exoticas"))
### Graficas ----
# PARA CAMBIAR COLORES: donde pone values = c(....), estan los 12 colores ordenados. La primera y ultima fila son para amenazadas y para exóticas, pero le tienes que poner el mismo color 4 veces. La fila de en medio para los tramos, ordenados del 1 al 4.
# Para cambiar el color necesitas solo el codigo hex del color y lo pones, importante no borrar las comillas.
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
setwd("D:/collf/Documents/DATOS ISMAEL.csv")
setwd("D:/collf/Documents")
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
ibrary(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
library(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(Tratamiento = as.factor(Tratamiento))
View(datos)
## Definicion del tema y formato de las graficas ----
theme_tfm <- function(){
theme(panel.background = element_rect(fill = "gray99"),
axis.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold", hjust = 1),
strip.text.x = element_text(size = 12, face = "bold", vjust = 0),
axis.title = element_text(size = 12),
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(colour = "gray10"),
axis.ticks = element_line(color = "gray10"))
#strip.background = element_rect(colour = "black")
}
p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col()
GEOM_ERRORBAR()
?geom_errorbar()
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = (SOD + SEM_SOD), ymin = (SOD - SEM_SOD))) +
geom_col()
summary(datos)
?read.csv2()
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1", colClasses = "numeric")%>%
mutate(Tratamiento = as.factor(Tratamiento))
as.numeric(SOD)
as.numeric(datos$SOD)
ggplot(datos, aes(x = Tratamiento, y = as.numeric(SOD))) +
geom_errorbar(aes(ymax = as.numeric(SOD) +as.numeric(SEM_SOD), ymin = as.numeric(SOD)-as.numeric(SEM_SOD))) +
geom_col()
install.packages("rstatix")
install.packages("ggpubr")
### SETUP ----
library(tidyverse)
library(rstatix)
library(ggpubr)
library(multcompView)
setwd("D:/collf/Documents/GitHub/TFM-Anemonia-sulcata") # portatil
#setwd("C:/Users/Usuario/Documents/GitHub/TFM-Anemonia-sulcata")  # lab
datos_c <- read.csv2("./datos/datos_peso_REVISION.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
View(datos_c)
summary(datos_c)
datos_c$tratamiento <- factor(datos_c$tratamiento, levels = c("Control", "Oscuro", "Salobre", "IMTA"), labels = c("Control", "LS", "BW", "IMTA"))
View(datos_c)
# Observamos la distribución de los datos en general y por grupo
hist(datos_c$ganancia.de.peso.total..g.)
# Observamos la distribución de los datos en general y por grupo
hist(datos_c$ganancia.de.peso.total..g.)
datos_c %>%
group_by(tratamiento) %>%
shapiro_test(ganancia.de.peso.total..g.)
datos_c %>%
group_by(tratamiento) %>%
shapiro_test(incremento.n)
# Observamos la distribución de los datos en general y por grupo
hist(datos_c$incremento.n)
## Comprobacion de outliers
outliers <- datos_c %>%
group_by(tratamiento) %>%
identify_outliers(ganancia.de.peso.total..g.)
View(outliers)
# Estadisticos de resumen para las graficas
tabla_sum_1 <- datos_c %>%
group_by(tratamiento)  %>%
get_summary_stats(ganancia.de.peso.total..g., type = "mean_se")
tabla_sum_2 <- datos_c %>%
group_by(tratamiento)  %>%
get_summary_stats(incremento.n, type = "mean_se")
# Boxplot rapido
(ggboxplot(datos_c, x = "tratamiento", y = "incremento.n",
add = "point", color = "tratamiento"))
(ggboxplot(datos_c, x = "tratamiento", y = "ganancia.de.peso.total..g.",
add = "point", color = "tratamiento"))
# Para ganancia de peso
ggplot(tabla_sum_1) +
geom_col(aes(x = tratamiento, y = mean, fill = tratamiento), alpha = 1, width = 0.8) +
geom_errorbar(aes(x = tratamiento, y = mean, ymax = mean + se, ymin = mean - se), width = 0.4, color = "gray45") +
geom_hline(yintercept=0, linetype="dashed")
# Para incremento de n
ggplot(tabla_sum_2) +
geom_col(aes(x = tratamiento, y = mean, fill = tratamiento), alpha = 1, width = 0.8) +
geom_errorbar(aes(x = tratamiento, y = mean, ymax = mean + se, ymin = mean - se), width = 0.4, color = "gray45") +
geom_hline(yintercept=0, linetype="dashed")
peso.anova <- anova_test(data = datos_c, formula = ganancia.de.peso.total..g. ~ tratamiento)
get_anova_table(peso.anova)
n.anova <- anova_test(data = datos_c, formula = incremento.n ~ tratamiento)
get_anova_table(n.anova)
datos_c$ganancia.de.peso.total..g.[3] <- NA
peso.anova <- anova_test(data = datos_c, formula = ganancia.de.peso.total..g. ~ tratamiento, type = 3)
get_anova_table(peso.anova)
# Outlier 3: no extremo pero afecta normalidad, baja p valor pero sigue muy amiguo
datos_c$ganancia.de.peso.total..g.[6] <- NA
datos_c$ganancia.de.peso.total..g.[3] <- NA
peso.anova <- anova_test(data = datos_c, formula = ganancia.de.peso.total..g. ~ tratamiento, type = 3)
get_anova_table(peso.anova)
anova1 <- aov(data = datos_c, incremento.n ~ tratamiento)
cld = multcompLetters4(anova1, TukeyHSD(anova1), reversed = T)
letras <- rownames_to_column(as.data.frame(cld$tratamiento$Letters))
colnames(letras) <- c("tratamiento", "tukey")
tabla_sum_2 <- merge(tabla_sum_2, letras)
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Difference in total number of individuals") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
setwd("D:/collf/Documents/GitHub/TFM-Anemonia-sulcata")
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Difference in total number of individuals") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# INCREMENTO DE PESO
ggplot(tabla_sum_1, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
#geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
#ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Change in Total Weight (g)") +
labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
# DIFERENCIA NUMERO INDIVIDUOS
ggplot(tabla_sum_2, aes(x = tratamiento)) +
geom_col(aes(y = mean, fill = tratamiento, color = tratamiento), alpha = 0.1, linewidth = 1) +
geom_errorbar(aes(ymax = mean + se, ymin = mean-se), width = 0.5, color = "gray35") +
geom_text(aes(y = (mean+3*se),label = tukey, x = tratamiento), size = 4, fontface = "bold") +
xlab(NULL) +
ylim(c(-5, 11)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_tfm() +
ylab("Difference in total number of individuals") +
#labs_pubr() +
guides(fill = "none") +
scale_fill_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C"))
library(tidyverse)
library(car)
library(multcompView)
library(patchwork)
setwd("D:/collf/Documents/GitHub/TFM-Anemonia-sulcata")
#source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
source(file = "./scripts_enero_2024/0_data_home.R") # En casa
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
print(":)")
hist(datos$GR.pie)
scale(datos$SOD.pie)
shapiro.test(datos$GPx.tent)
hist(filter(datos, tratamiento == "Shade")$GPx.pie)
shapiro.test(filter(datos, tratamiento == "Low_salinity")$GPx.tent)
ggplot(datos, aes(x = tratamiento, y = GPx.pie, color = tratamiento)) +
#geom_boxplot(alpha = 0) +
geom_point(position = position_jitter(height = 0, width = 0.1), size = 2)
# datos[20,6] <- NA # NO HACE FALTA QUITARLO
#datos$clorofila.total[8] <- NA # POTENCIAL OUTLIER EN CLOROFILA
datos$GST.pie[8] <- NA # potencial outlier en GST pie, rompe normalidad
datos$CAT.pie[8] <- NA # potencial outlier en CAT pie, rompe normalidad
datos$GST.tent[9] <- NA # potencial outlier en GST tent, rompe normalidad
datos$SOD.pie[8] <- NA # POTENCIAL OUTLIER, rompe normalidad
datos <- datos %>% select(-c(MDA.pie, MDA.tent)) # Primera medida de MDA no vale
modelos <- lapply(colnames(datos[c(4:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
# NORMALIDAD DE RESIDUOS
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
# HOMOCEDASTICIDAD
sapply(modelos, function(x){
print(leveneTest(x))})
for (i in c(1:22)) {
print(colnames(datos[4:25][i]))
print(summary(modelos[[i]]))}
library(rstatix)
View(datos)
datos.long <- datos %>%
select(-peso.total, -clorofila.total)
View(datos.long)
pivot_longer(-tratamiento, names_to = "variables", values_to = "value")
datos.long <- datos %>%
select(-peso.total, -clorofila.total) %>%
pivot_longer(-tratamiento, names_to = "variables", values_to = "value")
datos_t <- read.csv2("./datos/datos_t_test.csv", numerals = "warn.loss", encoding = "latin1")%>%
datos.long <- datos %>%
select(-peso.total, -clorofila.total) %>%
pivot_longer(-tratamiento, names_to = "variables", values_to = "value")
datos_t <- read.csv2("./datos/datos_t_test.csv", numerals = "warn.loss", encoding = "latin1")%>%
datos.long <- datos %>%
select(-peso.total, -clorofila.total) %>%
pivot_longer(-tratamiento, names_to = "variables", values_to = "value")
datos_t <- read.csv2("./datos/datos_t_test.csv", numerals = "warn.loss", encoding = "latin1")
datos_t <- read.csv2("./datos/datos_t_test.csv", numerals = "warn.loss", encoding = "latin1") %>%
mutate(tratamiento = as.factor(tratamiento))
View(datos_t)
datos.long <- datos %>%
pivot_longer(-tejido, names_to = "variables", values_to = "value")
datos.long <- datos_t %>%
pivot_longer(-tejido, names_to = "variables", values_to = "value")
rlang::last_trace()
datos.long <- datos_t %>%
select(-tratamiento, -n, -muestra) %>%
pivot_longer(-tejido, names_to = "variables", values_to = "value")
View(datos.long)
datos.long %>%
group_by(variables) %>%
t_test(value ~ tejido) %>%
adjust_pvalue(method = BH) %>%
add_significance()
rlang::last_trace()
datos.long %>%
group_by(variables) %>%
t_test(value ~ tejido)
datos_t <- read.csv2("./datos/datos_t_test.csv", numerals = "warn.loss", encoding = "latin1") %>%
mutate(tejido = as.factor(tejido))
datos.long <- datos_t %>%
select(-tratamiento, -n, -muestra) %>%
pivot_longer(-tejido, names_to = "variables", values_to = "value")
summary(datos.long)
summary(datos_t)
datos.long %>%
mutate(value = as.double(tratamiento))
datos.long %>%
mutate(value = as.double(value))
datos.long %>%
mutate(value = as.double(value)) %>%
group_by(variables) %>%
t_test(value ~ tejido) %>%
adjust_pvalue(method = BH) %>%
add_significance()
datos.long %>%
mutate(value = as.double(value)) %>%
group_by(variables) %>%
t_test(value ~ tejido) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
datos.long %>%
mutate(value = as.double(value)) %>%
group_by(variables) %>%
t_test(value ~ tejido, paired = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
paired.t.tes <- datos.long %>%
mutate(value = as.double(value)) %>%
group_by(variables) %>%
t_test(value ~ tejido, paired = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
View(paired.t.tes)
