theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
"diamond"
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1,
color = "#637076") +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1,
color = "#637076") +
geom_hline(yintercept = 0)
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1,
color = "#637076") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1) +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "gray") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#98785D") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#313D3F") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
colourpicker:::colourPickerAddin()
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "##383838") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_hline(yintercept = 0) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_hline(yintercept = 0, color = "red") +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_hline(yintercept = 0, color = "red") +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_point(aes(color = species), shape = "diamond", size = 8) +
scale_color_manual(values = bird_palette) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_hline(yintercept = 0, color = "red") +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_point(aes(color = species), shape = "diamond", size = 10) +
scale_color_manual(values = bird_palette) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_hline(yintercept = 0, color = "red") +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_point(aes(color = species), shape = "diamond", size = 9) +
scale_color_manual(values = bird_palette) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
(plot_output <- ggplot(lm_output, aes(x = species, y = slope)) +
geom_hline(yintercept = 0, color = "red") +
geom_errorbar(aes(x = species, ymin = slope-slope.error, ymax = slope+slope.error),
width = 0.1, color = "#383838") +
geom_point(aes(color = species), shape = "diamond", size = 10) +
scale_color_manual(values = bird_palette) +
labs(title = "Slopes for Linear Model:\n Breeding Success ~ Year") +
xlab("Species") +
ylab("Slope") +
theme_custom() +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(size = 18, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10, face = "bold.italic")))
ggsave("C:\Users\collf\Documents\plot.png", width = 600, heigth = 500)
ggsave("C:/Users/collf/Documents/plot.png", width = 600, heigth = 500)
ggsave("C:/Users/collf/Documents/plot.png", width = 600, heigth = 500, limitsize = F)
ggsave("C:/Users/collf/Documents/plot.png", width = 600, height = 500, limitsize = F)
setwd("C:/Users/collf/Documents/")
ggsave("C:/Users/collf/Documents/plot.png", width = 600, height = 500, limitsize = F)
broom::tidy(lm(x$breedingSuccess ~ I(x$year-1981), data = x))[1:2,1:5]
# Y ahora lapply los modelos + tidy/glance para sacar parametros, error y r2
lm_estimates <- lapply(by_species, function(x){
broom::tidy(lm(x$breedingSuccess ~ I(x$year-1981), data = x))[1:2,1:5]
})
View(lm_estimates)
lm_estimates
lm_goodness <- lapply(by_species, function(x){
broom::glance(lm(x$breedingSuccess ~ I(x$year-1981), data = x))[1,1:2]
})
lm_goodness
mt <- matrix(1:6,3,2)
mt[,-1]
a <- c(3,0,T)
b <- c(4,0,F)
c <- (a|b)
c
x <- c(2L, 3L, 4L, 15L, 23L, 43L)
typeof(median(x))
x <- as.Date("2018-10-01")
x
months(x)
month(x)
v <- 1:·
v <- 1:3
names(v) <- c("a", "b", "c")
v[4] <- 4
v
install.packages("igraph")
v1 <- 1:5
v2 <- rep(1,5)
v1+v2
v2 <- v1+v2
v2 <- v1+v2
v2 <- v1+v2
cor(v1,v2)
library(igraph)
g1 <- graph(edges = c(1,2, 2,3, 3,1 ), n = 3)
g1
plot(g1)
a <- c(1,2, 2,3, 3,1 )
g1 <- graprh(c("John", "Jean", "Jim"), )
g1 <- graph(c("John","Jean", "Jean","Jim", "Jim","John"), n = 3, directed = F)
g1 <- graph(c("John","Jean", "Jean","Jim", "Jim","John"), directed = F)
plot(g1)
g1
E(g1)
View(g1)
V(g1)
g1[]
install.packages("enaR")
library("enaR")
version
sessioninfo()
sessionInfo()
## SETUP ----
library(tidyverse)
library(ggthemr)
library(broom)
library(car)
library(multcompView)
ggthemr("fresh")
### SETUP ----
library(tidyverse)
install.packages("installr")
library(installr)
updateR()
### SETUP ----
library(tidyverse)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
setwd("D:\collf\Documents")
setwd("D:\collf\Documents")
setwd("D:/collf/Documents")
datos <- read.csv("Results.csv")
View(datos)
hist(datos, Area)
hist(datos$Area)
library(ggplot2)
p <- ggplot(datos) +
geom_histogram(aes(x = Area))
(p <- ggplot(datos) +
geom_histogram(aes(x = Area))
)
geom_histogram(aes(x = log(Area))
(p <- ggplot(datos) +
(p <- ggplot(datos) +
geom_histogram(aes(x = log(Area)))
)
(p <- ggplot(datos) +
geom_point(aes(x = Area, y = Circ.))
)
(p <- ggplot(datos) +
geom_point(aes(x = log(Area), y = Circ.))
)
install.packages("installr")
library(installr)
updateR()
installed.packages()
install.packages("tidyverse")
ggplot(tabla_summ) +
geom_errorbar(aes(x = tratamiento, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(aes(x = tratamiento, y = media, fill = tratamiento)) +
geom_text(aes(x = tratamiento, y = media + error, label = tukey),
color = "grey5", vjust = -0.5, size = 4) +
ylab(case_when(
i == "clorofila.total" ~ "μg clorofila /g tejido",
i == "proteina.tent" | i == "proteina.pie"  ~ " mg proteína / ml",
i == "MDA.pie.2" | i == "MDA.tent-2" ~ "μM  MDA",
i == "TEAC.pie" | i == "TEAC.tent"~ "μM equivalentes de Trolox",
i == "GST.pie" | i == "GST.tent" ~ "mU / mg  de proteína",
i == "DTD.pie" | i == "DTD.tent" ~ "mU / mg  de proteína",
TRUE ~ "U / mg  de proteína")) +
xlab("Tratamiento") +
scale_fill_manual(values = c("#0c8890", "#3EB59B","#E56A1C", "#FBBC4C")) + # Colores 1
#scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C", "#EF476F")) + # Colores 2
#scale_fill_manual(values = c("#1E5D56", "#0C8890", "#3EB59B", "#FBBC4C")) + # Colores 3
ylim(c(0, case_when(
i == "CAT.pie" ~  90,
i == "DTD.pie" ~  15,
i == "GST.pie" ~  450,
i == "MDA.pie.2"| i == "MDA.tent.2" ~  80,
i == "SOD.pie"| i == "SOD.tent" ~  150,
i == "TEAC.pie"| i == "TEAC.tent" ~  500,
i == "CAT.tent" | i == "DTD.tent" | i == "GST.tent" ~ max(tabla_summ$media) * 2,
TRUE ~ max(tabla_summ$media) * 1.2))) +
theme_tfm()
### SETUP ----
library(tidyverse)
library(car)
library(multcompView)
setwd("D:/collf/Documents/GitHub/TFM-Ortiguilla")
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
source(file = "./scripts/1_funciones_graficas.R")
ggthemr("fresh")
### Exploracion y outliers ----
# Outliers potenciales:
datos$MDA.tent[17] <- NA # Es claramente un error de medida
datos$MDA.tent[5] # Bastante elevado para su grupo QUITAR
datos$CAT.tent[20] <- NA # Bastante elevado en general
datos$CAT.pie[8] <- NA # Desorbitado para el grupo y general
datos$CAT.pie[16] <- NA # Desorbitado para el grupo y general
datos$proteina.tent[20] # Valor de proteina muy bajo, igual cambia otras variables, QUITAR
datos$GST.tent[9] <- NA # outlier clarisimo
datos$GST.tent[10] # se desvia bastante del resto de medidas, QUITAR
datos$GST.pie[8] <- NA # outlier clarisimo
datos$clorofila.total[8] <- NA # Bastante desorbitado
datos$SOD.pie[20] <- NA # outlier, posiblemente afecta al analisis
datos$SOD.tent[16] <- NA #outlier, enmascara diferencias
datos$SOD.tent[5] <- NA #outlier, enmascara diferencias
datos$MDA.pie.2[19] <- NA #outlier, sale mucho error por su culpa
datos$DTD.pie[5] <- NA
ggplot(datos) +
geom_histogram(aes(x = TEAC.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_point(aes(y = DTD.pie, x = tratamiento, color = tratamiento), size = 4, position = position_jitterdodge()) +
theme_tfm() +
ylab("DTD.pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B","#E56A1C",  "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B","#E56A1C",  "#FBBC4C"))
datos <- datos %>% select(-c(MDA.pie, MDA.tent))
# Ajustar modelo con lapply(). sapply() solia funcionar pero ya no no se por que
modelos <- lapply(colnames(datos[c(4:18)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
I <- i <- 10
i <- 10
n <- 10
i <- colnames(datos[4:18])[[n]]
tabla_summ <- datos %>%  group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "")
}
(p <- barras_tfm())
ggsave(paste0("./resultados/graficas/", i, ".png"), width = 800, height = 1000, units = "px", #para clorofila 730, 730
scale = 2, dpi = "retina")
n <- 11
i <- colnames(datos[4:18])[[n]]
tabla_summ <- datos %>%  group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "")
}
(p <- barras_tfm())
ggplot(tabla_summ) +
geom_errorbar(aes(x = tratamiento, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(aes(x = tratamiento, y = media, fill = tratamiento)) +
geom_text(aes(x = tratamiento, y = media + error, label = tukey),
color = "grey5", vjust = -0.5, size = 4) +
ylab(case_when(
i == "clorofila.total" ~ "μg clorofila /g tejido",
i == "proteina.tent" | i == "proteina.pie"  ~ " mg proteína / ml",
i == "MDA.pie.2" | i == "MDA.tent.2" ~ "μM  MDA",
i == "TEAC.pie" | i == "TEAC.tent"~ "μM equivalentes de Trolox",
i == "GST.pie" | i == "GST.tent" ~ "mU / mg  de proteína",
i == "DTD.pie" | i == "DTD.tent" ~ "mU / mg  de proteína",
TRUE ~ "U / mg  de proteína")) +
xlab("Tratamiento") +
scale_fill_manual(values = c("#0c8890", "#3EB59B","#E56A1C", "#FBBC4C")) + # Colores 1
#scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C", "#EF476F")) + # Colores 2
#scale_fill_manual(values = c("#1E5D56", "#0C8890", "#3EB59B", "#FBBC4C")) + # Colores 3
ylim(c(0, case_when(
i == "CAT.pie" ~  90,
i == "DTD.pie" ~  15,
i == "GST.pie" ~  450,
i == "MDA.pie.2"| i == "MDA.tent.2" ~  80,
i == "SOD.pie"| i == "SOD.tent" ~  150,
i == "TEAC.pie"| i == "TEAC.tent" ~  500,
i == "CAT.tent" | i == "DTD.tent" | i == "GST.tent" ~ max(tabla_summ$media) * 2,
TRUE ~ max(tabla_summ$media) * 1.2))) +
theme_tfm()
(p <- barras_tfm())
source(file = "./scripts/1_funciones_graficas.R")
n <- 11
i <- colnames(datos[4:18])[[n]]
# Nos quedamos con la primera o la segunda medida de MDA?
datos <- datos %>% select(-c(MDA.pie, MDA.tent))
# Ajustar modelo con lapply(). sapply() solia funcionar pero ya no no se por que
modelos <- lapply(colnames(datos[c(4:18)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
### Exploracion y outliers ----
# Outliers potenciales:
datos$MDA.tent[17] <- NA # Es claramente un error de medida
datos$MDA.tent[5] # Bastante elevado para su grupo QUITAR
datos$CAT.tent[20] <- NA # Bastante elevado en general
datos$CAT.pie[8] <- NA # Desorbitado para el grupo y general
datos$CAT.pie[16] <- NA # Desorbitado para el grupo y general
datos$proteina.tent[20] # Valor de proteina muy bajo, igual cambia otras variables, QUITAR
datos$GST.tent[9] <- NA # outlier clarisimo
datos$GST.tent[10] # se desvia bastante del resto de medidas, QUITAR
datos$GST.pie[8] <- NA # outlier clarisimo
datos$clorofila.total[8] <- NA # Bastante desorbitado
datos$SOD.pie[20] <- NA # outlier, posiblemente afecta al analisis
datos$SOD.tent[16] <- NA #outlier, enmascara diferencias
datos$SOD.tent[5] <- NA #outlier, enmascara diferencias
datos$MDA.pie.2[19] <- NA #outlier, sale mucho error por su culpa
datos$DTD.pie[5] <- NA
ggplot(datos) +
geom_histogram(aes(x = TEAC.tent), bins = 16) +
theme_tfm()
ggplot(datos) +
geom_point(aes(y = DTD.pie, x = tratamiento, color = tratamiento), size = 4, position = position_jitterdodge()) +
theme_tfm() +
ylab("DTD.pie") +
scale_fill_manual(values = c("#0c8890", "#3EB59B","#E56A1C",  "#FBBC4C")) +
scale_color_manual(values = c("#0c8890", "#3EB59B","#E56A1C",  "#FBBC4C"))
# Nos quedamos con la primera o la segunda medida de MDA?
datos <- datos %>% select(-c(MDA.pie, MDA.tent))
# Ajustar modelo con lapply(). sapply() solia funcionar pero ya no no se por que
modelos <- lapply(colnames(datos[c(4:18)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
i <- colnames(datos[4:18])[[n]]
tabla_summ <- datos %>%  group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "")
}
(p <- barras_tfm())
ggsave(paste0("./resultados/graficas/", i, ".png"), width = 800, height = 1000, units = "px", #para clorofila 730, 730
scale = 2, dpi = "retina")
