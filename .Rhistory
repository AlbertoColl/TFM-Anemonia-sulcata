cor(v1,v2)
library(igraph)
g1 <- graph(edges = c(1,2, 2,3, 3,1 ), n = 3)
g1
plot(g1)
a <- c(1,2, 2,3, 3,1 )
g1 <- graprh(c("John", "Jean", "Jim"), )
g1 <- graph(c("John","Jean", "Jean","Jim", "Jim","John"), n = 3, directed = F)
g1 <- graph(c("John","Jean", "Jean","Jim", "Jim","John"), directed = F)
plot(g1)
g1
E(g1)
View(g1)
V(g1)
g1[]
install.packages("enaR")
library("enaR")
version
sessioninfo()
sessionInfo()
## SETUP ----
library(tidyverse)
library(ggthemr)
library(broom)
library(car)
library(multcompView)
ggthemr("fresh")
### SETUP ----
library(tidyverse)
install.packages("installr")
library(installr)
updateR()
### SETUP ----
library(tidyverse)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
setwd("D:\collf\Documents")
setwd("D:\collf\Documents")
setwd("D:/collf/Documents")
datos <- read.csv("Results.csv")
View(datos)
hist(datos, Area)
hist(datos$Area)
library(ggplot2)
p <- ggplot(datos) +
geom_histogram(aes(x = Area))
(p <- ggplot(datos) +
geom_histogram(aes(x = Area))
)
geom_histogram(aes(x = log(Area))
(p <- ggplot(datos) +
(p <- ggplot(datos) +
geom_histogram(aes(x = log(Area)))
)
(p <- ggplot(datos) +
geom_point(aes(x = Area, y = Circ.))
)
(p <- ggplot(datos) +
geom_point(aes(x = log(Area), y = Circ.))
)
install.packages("installr")
library(installr)
updateR()
installed.packages()
install.packages("tidyverse")
## SETUP ----
library(tidyverse)
library(GGally) # Correlograma
library(ggvegan)# Biplot
library(vegan) #PCA
setwd("D:/collf/Documents/GitHub/TFM-Ortiguilla")
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
source(file = "./scripts/1_funciones_graficas.R")
ggthemr("fresh")
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.tent, TEAC.pie)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
### Graficas y resultados PCA ----
#Extraer eigenvalues y hacer Scree plot bonico con ggplot
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
rename("eigenvalue"="PCA$CA$eig") %>%
mutate(var_per = eigenvalue/sum(eigenvalue)) %>%
rownames_to_column(var = "PC")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent, limits = c(0,0.4)) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:43) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:3) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:3]) # queremos un 80%
### Graficas y resultados PCA ----
#Extraer eigenvalues y hacer Scree plot bonico con ggplot
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
rename("eigenvalue"="PCA$CA$eig") %>%
mutate(var_per = eigenvalue/sum(eigenvalue)) %>%
rownames_to_column(var = "PC")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent, limits = c(0,0.4)) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
### Graficas y resultados PCA ----
#Extraer eigenvalues y hacer Scree plot bonico con ggplot
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
rename("eigenvalue"="PCA$CA$eig") %>%
mutate(var_per = eigenvalue/sum(eigenvalue)) %>%
rownames_to_column(var = "PC")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent, limits = c(0,0.4)) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
View(eigenvalues)
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent, limits = c(0,0.5)) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
# Seleccionar variables que incluir en el PCA. ¿Probar separando pie y tentaculo?
datos_pca <- scale(select(datos, CAT.pie, CAT.tent, GST.pie, GST.tent, MDA.pie, MDA.tent, TEAC.pie, TEAC.tent)) # Clorofila, peso, proteina y TEAC no son muy relevantes parece ser
# Hacer matriz de correlacion
# Ordenar luego manualmente variables segun relevancia en PCA para la grafica
ggcorr(datos_pca, label = F, label_alpha = T,
hjust = 0.75, size = 3, color = "grey50", layout.exp = 1,
high = "#3EB59B", mid = "white", low = "#E56A1C") +
labs(title = "Correlacion entre indicadores medidos",
subtitle = "ordenados segun PC1/PC2") +
theme_tfm() +
theme(axis.line = element_blank())
# Ejecutar PCA
PCA <- rda(na.omit(datos_pca), scale = TRUE)
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:3]) # queremos un 80%
sum((as.vector(PCA$CA$eig)/sum(PCA$CA$eig))[1:4]) # queremos un 80%
### Graficas y resultados PCA ----
#Extraer eigenvalues y hacer Scree plot bonico con ggplot
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
rename("eigenvalue"="PCA$CA$eig") %>%
mutate(var_per = eigenvalue/sum(eigenvalue)) %>%
rownames_to_column(var = "PC")
ggplot(eigenvalues, aes(x = PC,y = var_per)) +
geom_line(group = 1, color = "#3EB59B") +
geom_point(size = 3, color = "#0c8890") +
theme_tfm() +
scale_y_continuous(labels = scales::percent, limits = c(0,0.5)) +
xlab("Compontenes Principales") +
ylab("% de variación explicada")
# Factor loadings, exportar en csv para hacer tabla
write.csv2(as.data.frame(PCA[["CA"]][["v"]]), "./resultados/PCA_factor_loadings.csv")
#Biplot, ver si puedes cambiar componentes
biplot(PCA, choices = c(1,2), type = c("text", "points"),
col = c("#0c8890", "#414066"), scaling = 1)
# Esto con formato ggplot
autoplot(PCA, arrows = T) +
xlab(paste0("Componente Principal 1 (", round(eigenvalues$var_per[1]*100, 2) ,"%)")) +
ylab(paste0("Componente Principal 2 (", round(eigenvalues$var_per[2]*100, 2) ,"%)")) +
theme_tfm()
PCA_df <- fortify(PCA) %>%
mutate(Score = ifelse(Score == "species", "variable", "observation"))
View(PCA_df)
View(PCA_df)
ggplot(filter(PCA_df, Score == "observation")) +
geom_point(aes(x = PC1, y = PC2))
aes(x = PC1, y = PC2))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2))
View(PCA_df)
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
geom_point(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
geom_point(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2), color = red)
aes(x = PC1, y = PC2), color = "red"")
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
geom_point(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2), color = "red")
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
geom_point(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = label), color = "red")
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
geom_point(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), color = "red")
?geom_segment()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
#geom_point(data = filter(PCA_df, Score == "variable"),
#          aes(x = PC1, y = PC2), color = "red") +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
#geom_point(data = filter(PCA_df, Score == "variable"),
#          aes(x = PC1, y = PC2), color = "red") +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2, label = Label))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
#geom_point(data = filter(PCA_df, Score == "variable"),
#          aes(x = PC1, y = PC2), color = "red") +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2), color = "Red")
arrow=arrow(length=unit(0.3,"cm"))
arrow=arrow(length=unit(0.3,"cm"))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
#geom_point(data = filter(PCA_df, Score == "variable"),
#          aes(x = PC1, y = PC2), color = "red") +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2), color = "Red",
arrow  =arrow(length=unit(0.3,"cm")))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2)) +
#geom_point(data = filter(PCA_df, Score == "variable"),
#          aes(x = PC1, y = PC2), color = "red") +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2), color = "#E56A1C",
arrow  =arrow(length=unit(0.3,"cm")))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_
?geom_text()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_label(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label))
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_label(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.6)
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.6)
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8)
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8, position = "jitter") +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8, position = "jitter") +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = position_dodge() ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = position_dodge(width = 0.1) ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = position_jitter(width = 0.1) ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = position_jitter(width = 0.1, height = 0.3) ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = position_jitter(width = 0.2, height = 0.1) ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.8,
position = "jitter" ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2,2)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2.5, 2.5)) +
xlim(c(-2.5,2.5)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2.5, 2.5)) +
xlim(c(-2,2)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2,2.5)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2.5,2.5)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5, alpha = 0.9) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2.5,2.5)) +
theme_tfm()
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5, alpha = 0.9) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#FBBC4C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2.5,2.5)) +
theme_tfm()
#E56A1C
ggplot() +
geom_point(data = filter(PCA_df, Score == "observation"),
aes(x = PC1, y = PC2), size = 2.5, alpha = 0.9) +
geom_segment(data = filter(PCA_df, Score == "variable"),
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "#E56A1C", arrow  =arrow(length=unit(0.3,"cm"))) +
geom_text(data = filter(PCA_df, Score == "variable"),
aes(x = PC1, y = PC2, label = Label), alpha = 0.75,
position = "jitter" ) +
ylim(c(-2, 2)) +
xlim(c(-2.5,2.5)) +
xlab(paste0("Componente Principal 1 (", round(eigenvalues$var_per[1]*100, 2) ,"%)")) +
ylab(paste0("Componente Principal 2 (", round(eigenvalues$var_per[2]*100, 2) ,"%)")) +
theme_tfm()
