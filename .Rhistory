# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
6
6
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
datos$ac2 <- ac2$cluster
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
# Terminado: 09/02/2024
### SETUP ----
library(tidyverse)
library(psych) #correlacion
library(MVN)
library(factoextra)
library(patchwork)
setwd("C:/Users/Usuario/Documents/GitHub/TFM-Anemonia-sulcata")
#setwd("D:/collf/Documents/GitHub/TFM-Anemonia-sulcata") #portatil
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
#source(file = "./scripts_enero_2024/0_data_home.R") # portatil
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent, proteina.pie, proteina.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:23])
cor.plot(datos_cor)
det(datos_cor)
### Contrastes de correlacion y KMO ----
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cortest.bartlett(datos[,6:23], nrow(datos))
# Se rechaza H0, la matriz de correlacion es diferente a la matriz identidad
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:23])), cor = TRUE)
cp$loadings
write.csv2(cp$loadings, file = "./resultados/cargas.factoriales.csv")
summary(cp)
# 4 componentes ya superan 70 % varianza
screeplot(cp, type = "lines") # 4 o 5 componentes
cp$sdev^2 # 6 componentes segun regla de Kaiser
# Voy a seleccionar 5 componentes
(biplot <- fviz_pca_biplot(cp, col.ind = "gray30", alpha.ind = 0.8,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 2))
(biplot <- fviz_pca_biplot(cp, col.ind = "gray30", alpha.ind = 0.8,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
(biplot <- fviz_pca_biplot(cp, col.ind = "royalblue4", alpha.ind = 0.6,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
(biplot <- fviz_pca_biplot(cp, col.ind = "slateblue4", alpha.ind = 0.6,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
(biplot <- fviz_pca_biplot(cp, col.ind = "slateblue4", alpha.ind = 0.4,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
(biplot <- fviz_pca_biplot(cp, col.ind = "slateblue4", alpha.ind = 0.4,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 4))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
(biplot <- fviz_pca_biplot(cp, col.ind = "slateblue4", alpha.ind = 0.4,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
View(datos)
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:23])), cor = TRUE)
cp$loadings
summary(cp)
?fviz_pca_biplot
(biplot <- fviz_pca_biplot(cp, axes = c(1,3), col.ind = "slateblue4", alpha.ind = 0.4,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
(biplot <- fviz_pca_biplot(cp, axes = c(2,3), col.ind = "slateblue4", alpha.ind = 0.4,
alpha.var = "contrib", col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
(biplot <- fviz_pca_biplot(cp, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cortest.bartlett(datos[,6:23], nrow(datos))
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
KMO(datos_cor[-TEAC.tent])
View(datos_cor)
setwd("C:/Users/Usuario/Documents/GitHub/TFM-Anemonia-sulcata")
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:25])
cor.plot(datos_cor)
det(datos_cor)
mvn(datos[,6:25], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cortest.bartlett(datos[,6:23], nrow(datos))
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:25])
View(datos_cor)
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent, proteina.pie, proteina.tent, TEAC.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:22])
cor.plot(datos_cor)
det(datos_cor)
mvn(datos[,6:22], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:22])), cor = TRUE)
cp$loadings
summary(cp)
# 4 componentes ya superan 70 % varianza
screeplot(cp, type = "lines") # 4 o 5 componentes
cp$sdev^2 # 6 componentes segun regla de Kaiser
(biplot <- fviz_pca_biplot(cp, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
#source(file = "./scripts_enero_2024/0_data_home.R") # portatil
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent, proteina.pie, proteina.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:23])
cor.plot(datos_cor)
det(datos_cor)
### Contrastes de correlacion y KMO ----
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cortest.bartlett(datos[,6:23], nrow(datos))
# Se rechaza H0, la matriz de correlacion es diferente a la matriz identidad
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:23])), cor = TRUE)
cp$loadings
cp$loadings
summary(cp)
# 4 componentes ya superan 70 % varianza
screeplot(cp, type = "lines") # 4 o 5 componentes
cp$sdev^2 # 5 componentes segun regla de Kaiser
(biplot <- fviz_pca_biplot(cp, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
ggsave("./resultados/graficas3/PCA_biplot.png", width = 90, height = 90, units = "mm", dpi = 1000, scale = 1.25)
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
#source(file = "./scripts_enero_2024/0_data_home.R") # portatil
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie.2, MDA.tent.2, proteina.pie, proteina.tent)) %>%
rename(MDA.col = MDA.pie, MDA.tent = MDA.tent,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:23])
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
#source(file = "./scripts_enero_2024/0_data_home.R") # portatil
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie.2, MDA.tent.2, proteina.pie, proteina.tent)) %>%
rename(MDA.col = MDA.pie, MDA.tent = MDA.tent,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:23])
cor.plot(datos_cor)
det(datos_cor)
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cor.plot(datos_cor)
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
#source(file = "./scripts_enero_2024/0_data_home.R") # portatil
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent, proteina.pie, proteina.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:23])
cor.plot(datos_cor)
det(datos_cor)
### Contrastes de correlacion y KMO ----
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
cortest.bartlett(datos[,6:23], nrow(datos))
# Se rechaza H0, la matriz de correlacion es diferente a la matriz identidad
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:23])), cor = TRUE)
cp$loadings
write.csv2(cp$loadings, file = "./resultados/cargas.factoriales.csv")
summary(cp)
# 4 componentes ya superan 70 % varianza
screeplot(cp, type = "lines") # 4 componentes
cp$sdev^2 # 5 componentes segun regla de Kaiser
# Voy a seleccionar 5 componentes
### Biplot y graficas ----
(biplot <- fviz_pca_biplot(cp, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
View(datos)
### PCA por tejido ----
datos_p <- datos %>% select(-SOD.tent, -CAT.tent, -GPx.tent, -GR.tent, -GST.tent, -DTD.tent, -G6PDH.tent, -TEAC.tent, -MDA.tent)
datos_c <- datos %>% select(-SOD.col, -CAT.col, -GPx.col, -GR.col, -GST.col, -DTD.col, -G6PDH.col, -TEAC.col, -MDA.col)
datos_p_cor <- cor(datos_p[6:23])
View(datos_p)
datos_p_cor <- cor(datos_p[6:14])
det(datos_p_cor)
mvn(datos_p[,6:14], mvnTest = "mardia")
cortest.bartlett(datos_p[,6:14], nrow(datos))
KMO(datos_p_cor)
cp_p <- princomp(~., data = as.data.frame(scale(datos_p[,6:14])), cor = TRUE)
summary(cp)
summary(cp_p) # 4 componentes
cp_p$sdev^2 # 5 componentes segun regla de Kaiser
summary(cp_p) # 4 componentes
screeplot(cp_p, type = "lines") # 3 componentes
(biplot <- fviz_pca_biplot(cp_p, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
labelsize = 3))
datos_t_cor <- cor(datos_t[6:14])
# TENTACULO
datos_t <- datos %>% select(-SOD.col, -CAT.col, -GPx.col, -GR.col, -GST.col, -DTD.col, -G6PDH.col, -TEAC.col, -MDA.col)
datos_t_cor <- cor(datos_t[6:14])
det(datos_t_cor)
mvn(datos_t[,6:14], mvnTest = "mardia")
cortest.bartlett(datos_t[,6:14], nrow(datos))
KMO(datos_t_cor)
cp_t <- princomp(~., data = as.data.frame(scale(datos_t[,6:14])), cor = TRUE)
summary(cp_t) # 3 componentes
screeplot(cp_t, type = "lines") # 2-3 componentes
cp_t$sdev^2 # 3 componentes segun regla de Kaiser
(biplot <- fviz_pca_biplot(cp_t, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
labelsize = 3))
cp_t$loadings
source(file = "./scripts_enero_2024/0_data_lab.R") # Laboratorio
source(file = "./scripts_enero_2024/1_funciones_graficas.R")
ggthemr("fresh")
# Primera medida de MDA no vale
# Proteina es linealmente dependiente del resto de enzimas
datos <- datos %>% select(-c(MDA.pie, MDA.tent, proteina.pie, proteina.tent, SOD.tent, TEAC.tent)) %>%
rename(MDA.col = MDA.pie.2, MDA.tent = MDA.tent.2,
SOD.col = SOD.pie, CAT.col = CAT.pie,
GST.col = GST.pie, DTD.col = DTD.pie,
G6PDH.col = G6PDH.pie, TEAC.col = TEAC.pie,
GPx.col = GPx.pie, GR.col = GR.pie)
### Matriz de correlacion ----
datos_cor <- cor(datos[,6:21])
cor.plot(datos_cor)
det(datos_cor)
mvn(datos[,6:23], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
mvn(datos[,6:21], mvnTest = "mardia") # Sin proteina ni clorofila, el conjunto de datos es normal
KMO(datos_cor) # 0.41 global, aceptable. GST tent, G6PDH tent y TEAC tent tienen poca correlacion parcial con el resto pero aportan informcion importante.
### Modelo PCA y eleccion de numero de componentes ----
cp <- princomp(~., data = as.data.frame(scale(datos[,6:21])), cor = TRUE)
cp$loadings
summary(cp)
# 4 componentes ya superan 70 % varianza
screeplot(cp, type = "lines") # 4 componentes
cp$sdev^2 # 5 componentes segun regla de Kaiser
(biplot <- fviz_pca_biplot(cp, axes = c(1,2), col.ind = "slateblue4",
alpha.ind = 0.4, alpha.var = "contrib",
col.var = "contrib",
gradient.cols = c("#0c8890","#54B65D", "#D42828"),
repel = TRUE, label = "var", ggtheme = theme_tfm(),
select.var = list(contrib = 15), labelsize = 3))
